include("../gubg")
root.book("subsoil", fun(b){
    b.recipe("func", fun(rcp){
        rcp.add("src", "**/*.hpp")
        rcp.add("src", "**/*.cpp")
        rcp.depends_on("gubg/func")
    })
})
root.book("toolbox", fun(b){
    b.recipe("exe", TargetType.Executable, fun(rcp){
        rcp.add("toolbox/src", "*.cpp")
        rcp.depends_on("subsoil.func")
    })
})
root.book("fri3d", fun(b){
    b.recipe("nn", TargetType.Executable, fun(rcp){
        rcp.add("fri3d/2018/src", "nn/*.[hc]pp")
        rcp.add("fri3d/2018/src", "nn.cpp")
        rcp.depends_on("gubg/func")
    })
    b.recipe("mlp", TargetType.Executable, fun(rcp){
        rcp.add("fri3d/2018/src", "mlp/*.[hc]pp")
        rcp.add("fri3d/2018/src", "mlp.cpp")
        rcp.depends_on("gubg/func")
    })
    b.recipe("create_mlps", TargetType.Executable, fun(rcp){
        rcp.add("fri3d/2018/src", "create_mlps.cpp")
        rcp.depends_on("gubg/func")
    })
    b.recipe("boat", TargetType.Executable, fun(rcp){
        rcp.add("fri3d/2018/src", "boat.cpp")
        rcp.depends_on("/arduino/core")
        rcp.depends_on("/arduino/servo")
    })
    b.recipe("prop", TargetType.Executable, fun(rcp){
        rcp.add("fri3d/2018/src", "prop.cpp")
        rcp.depends_on("/arduino/core")
        rcp.depends_on("/arduino/servo")
    })
})
root.book("poc", fun(b){
    b.recipe("exe", TargetType.Executable, fun(rcp){
        rcp.add("poc", "${getenv("subsoil_poc_filename")}.cpp")
        rcp.depends_on("/arduino/core")
        rcp.depends_on("gubg/arduino")
        rcp.depends_on("gubg/std/func")
        rcp.depends_on("gubg/io/hpp")
        /* rcp.depends_on("gubg/func"); */
    })
})
root.book("domotica", fun(b){
    b.recipe("bus", TargetType.Executable, fun(rcp){
        rcp.add("domotica/bus", "**.[hc]pp")
        rcp.depends_on("gubg/func");
    })
})
root.book("laurot", fun(b){
    b.recipe("slave", TargetType.Executable, fun(rcp){
        rcp.add("laurot/src/slave", "**.[hc]pp")
        rcp.add("laurot/src", "laurot/**.[hc]pp");
        cook.toolchain.each_config("slave.id", fun[rcp](id){
            rcp.define("LAUROT_SLAVE_ID", id)
        })
        rcp.depends_on("/arduino/core")
        rcp.depends_on("gubg/arduino")
        rcp.depends_on("gubg/std/func")
        rcp.depends_on("gubg/io/hpp")
        /* rcp.depends_on("gubg/func"); */
    })
    b.recipe("master", TargetType.Executable, fun(rcp){
        rcp.add("laurot/src/master", "**.[hc]pp")
        rcp.add("laurot/src", "laurot/**.[hc]pp");
        rcp.depends_on("gubg/func");
    })
})
root.book("quiz", fun(b){
    b.recipe("slave", TargetType.Executable, fun(rcp){
        rcp.add("quiz/src/slave", "**.[hc]pp")
        rcp.add("quiz/src", "laurot/**.[hc]pp");
        rcp.depends_on("/arduino/core")
        rcp.depends_on("gubg/arduino")
        rcp.depends_on("gubg/std/func")
        rcp.depends_on("gubg/io/hpp")
    })
    b.recipe("master", TargetType.Executable, fun(rcp){
        rcp.add("quiz/src/master", "**.[hc]pp")
        rcp.add("quiz/src", "quiz/**.[hc]pp");
        rcp.depends_on("gubg/func");
        rcp.library("sfml-graphics")
        rcp.library("sfml-window")
        rcp.library("sfml-system")
    })
})
